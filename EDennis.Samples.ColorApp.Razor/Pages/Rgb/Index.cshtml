@page
@model EDennis.Samples.ColorApp.Razor.Pages.Rgb.IndexModel

@{
    ViewData["Title"] = "Search";
}

<h1>Search</h1>

<p>
    <a asp-page="./Create">Create New</a>
</p>
<div class="container">
    <form class="form" asp-page="./Index" method="get">
        <div class="form-group row filter-row">
            <select asp-for="Fld0" asp-items="Model.FieldList" class="form-control col-sm-3"></select>
            <select asp-for="Op0" asp-items="Model.OpList" class="form-control col-sm-3"></select>
            <input asp-for="Val0" type="text" class="form-control col-sm-6"> <!-- style="width:500px!important"> -->
        </div>
        <div class="form-group row filter-row">
            <select asp-for="Fld1" asp-items="Model.FieldList" class="form-control col-sm-3"></select>
            <select asp-for="Op1" asp-items="Model.OpList" class="form-control col-sm-3"></select>
            <input asp-for="Val1" type="text" class="form-control col-sm-6"> <!-- style="width:500px!important"> -->
            <input type="hidden" name="pageNumber" id="pageNumber" value="1" />
        </div>

        <div class="form-group row filter-row">
            <div class="col-sm-2 offset-sm-5 button-column">
                <input type="submit" value="Search" class="btn btn-secondary btn-block" />
            </div>
        </div>
    </form>


    <table class="table table-sm">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Red</th>
                <th>Green</th>
                <th>Blue</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Data) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Red)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Green)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Blue)
                </td>
                <td>
                    <a asp-page="/Rgb/Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="/Rgb/Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="/Rgb/Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
</div>



<!--TODO: Get this working -->
<!--
<component type="typeof(BlazorPager)" render-mode="ServerPrerendered"
           param-Url="./Index" param-Model="@Model" />
-->

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-fld0="@Model.Fld0"
   asp-route-op0="@Model.Op0"
   asp-route-val0="@Model.Val0"
   asp-route-fld1="@Model.Fld1"
   asp-route-op1="@Model.Op1"
   asp-route-val1="@Model.Val1"
   asp-route-pageNumber="@(Model.CurrentPage - 1)"
   asp-route-totalRecords="@Model.RowCount"
   class="btn btn-secondary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-fld0="@Model.Fld0"
   asp-route-op0="@Model.Op0"
   asp-route-val0="@Model.Val0"
   asp-route-fld1="@Model.Fld1"
   asp-route-op1="@Model.Op1"
   asp-route-val1="@Model.Val1"
   asp-route-pageNumber="@(Model.CurrentPage + 1)"
   asp-route-totalRecords="@Model.RowCount"
   class="btn btn-secondary @nextDisabled">
    Next
</a>